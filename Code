#include <iostream>
#include <cmath>

using namespace std;

int main() {
    char op;
    float num1, num2, result;

    cout << "Enter operator (+, -, *, /, %, ^, sin, cos, tan, log, sqrt): ";
    cin >> op;

    cout << "Enter first number: ";
    cin >> num1;

    if(op != 'sin' && op != 'cos' && op != 'tan' && op != 'log' && op != 'sqrt') {
        cout << "Enter second number: ";
        cin >> num2;
    }

    switch(op) {
        case '+':
            result = num1 + num2;
            cout << num1 << " + " << num2 << " = " << result;
            break;

        case '-':
            result = num1 - num2;
            cout << num1 << " - " << num2 << " = " << result;
            break;

        case '*':
            result = num1 * num2;
            cout << num1 << " * " << num2 << " = " << result;
            break;

        case '/':
            if (num2 == 0) {
                cout << "Error: Divide by zero";
            } else {
                result = num1 / num2;
                cout << num1 << " / " << num2 << " = " << result;
            }
            break;

        case '%':
            result = fmod(num1, num2);
            cout << num1 << " % " << num2 << " = " << result;
            break;

        case '^':
            result = pow(num1, num2);
            cout << num1 << " ^ " << num2 << " = " << result;
            break;

        case 'sin':
            result = sin(num1);
            cout << "sin(" << num1 << ") = " << result;
            break;

        case 'cos':
            result = cos(num1);
            cout << "cos(" << num1 << ") = " << result;
            break;

        case 'tan':
            result = tan(num1);
            cout << "tan(" << num1 << ") = " << result;
            break;

        case 'log':
            result = log10(num1);
            cout << "log(" << num1 << ") = " << result;
            break;

        case 'sqrt':
            result = sqrt(num1);
            cout << "sqrt(" << num1 << ") = " << result;
            break;

        default:
            cout << "Error: Invalid operator";
            break;
    }

    return 0;
}
